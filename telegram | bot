# =========================
# –ò–ú–ü–û–†–¢–´ –ë–ò–ë–õ–ò–û–¢–ï–ö
# =========================
import sys
import telebot
import random
from random import choice


# =========================
# –¢–û–ö–ï–ù –ù–ê–®–ï–ì–û –ë–û–¢–ê
# =========================
bot = telebot.TeleBot('7886179441:AAEwrtebuKeFBBQagQ5BLRKnHFSUdw3Ha60')

# =========================
# –°–ü–ò–°–û–ö –°–õ–û–í –î–õ–Ø –ò–ì–†–´ –í "–£–ì–ê–î–ê–ô –°–õ–û–í–û"
# =========================
words = [
    '–∞–≤—Ç–æ–º–∞—Ç', '–±–∞—Ä–∞–Ω', '–≤–æ–¥–∞', '–≥—Ä—É—à–∞', '–¥–æ–º', '–µ–∂–∏–∫', '–∂–∏—Ä–∞—Ñ', '–∑–µ–±—Ä–∞',
    '–∏–≥–ª—É', '–π–æ–≥—É—Ä—Ç', '–∫–∞–ø—É—Å—Ç–∞', '–ª–∏–º–æ–Ω', '–º–µ–¥', '–Ω–æ—Ç–∞', '–æ–≥—É—Ä–µ—Ü', '–ø—Ç–∏—Ü–∞',
    '—Ä–∞–¥—É–≥–∞', '—Å–æ–±–∞–∫–∞', '—Ç–æ–º–∞—Ç', '—É–ª–∏—Ç–∫–∞', '—Ñ–æ–Ω–∞—Ä—å', '—Ü–∏—Ä–∫', '—á–∞—à–∫–∞', '—à–∞—Ä–∏–∫',
    '—â—É–∫–∞', '—è–±–ª–æ–∫–æ', '—é–≥', '—è–π—Ü–æ', '–∞–Ω–∞–Ω–∞—Å', '–±–∏–±–ª–∏–æ—Ç–µ–∫–∞', '–≤–∞–∑–∞', '–≥—Ä–∞–Ω–∞—Ç',
    '–¥—Ä–∞–∫–æ–Ω', '–µ–∂–µ–≤–∏–∫–∞', '–∂—É—Ä–Ω–∞–ª', '–∑–≤–µ–∑–¥', '—Ä–æ–Ω–∞–ª–¥—É', '–∫–Ω–∏–≥–∞', '–º–∏—Ä', '–Ω–æ—É—Ç–±—É–∫',
    '–æ–≤–æ—â', '–ø–µ—Å–æ–∫', '—Ä–∞–º–∫–∞', '—Å–∞–º–æ–ª–µ—Ç', '—Ç–≤–æ—Ä–æ–≥', '—É—á–µ–±–Ω–∏–∫', '—Ñ—Ä—É–∫—Ç—ã', '—Ö–ª–µ–±',
    '—Ü–µ–Ω–∞', '—à–∫–æ–ª–∞', '—â–µ–Ω–æ–∫', '–∞–±—Ä–∏–∫–æ—Å', '–±–∞–Ω–∫', '–≤–∏–ª–∫–∞', '–≥–∏—Ç–∞—Ä–∞', '–¥–≤–µ—Ä—å',
    '–º–µ—Å—Å–∏', '–∂–µ–Ω–∞', '–∑–Ω–∞–∫', '–∫–ª—é—á', '–º—ã—à—å', '–Ω–µ–¥–µ–ª—è', '–æ–±–ª–∞–∫–æ', '–ø—É–ª–µ–º–µ—Ç',
    '—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ', '—Å–ª–æ–Ω', '—Ç–æ–ø–æ—Ä', '—Ñ–ª–∞–≥', '—Ü–∞—Ä—å', '—à—É–º', '—è–º–∞', '–∞–≥–µ–Ω—Ç',
    '–±–æ–∫—Å', '–≤–æ—Å—Ö–æ–¥', '–≥—Ä–∏–±', '–¥–æ—Å–∫–∞', '–µ–∂–µ–≤–∏—á–Ω—ã–π', '–∂–∏–∑–Ω—å', '–∑–∞–º–æ–∫', '–∫–∞—Ç–µ—Ä',
    '–ª–æ—à–∞–¥—å', '–º–æ—Å—Ç', '–Ω–µ–π—Ä–æ–Ω', '–æ–±—ã—á–∞–π', '–ø—Ä–∞–∑–¥–Ω–∏–∫', '—Ä–µ–∫–∞', '—Å–≤–µ—Ç', '–≥–æ—Ä–æ–¥',
    '—Ç—Ä–æ–ø–∞', '—Ñ–∏–ª—å–º', '—Ü–≤–µ—Ç–æ–∫', '—à–∞—Ñ—Ä–∞–Ω', '—â–∏–ø—Ü—ã', '—Å–ø–µ—Ü–Ω–∞–∑', '–∫–æ—Å–º–æ—Å', '—Å–æ–±—Ä',
    '—Ä—é–∫–∑–∞–∫', '–ø–ª–∞–Ω', '—Å–ª–æ–≤–∞—Ä—å', '–±–ª–æ–∫–Ω–æ—Ç', '—Ñ—É—Ç–±–æ–ª', '–∂–∞—Ä–µ–Ω—ã–π', '—à–∫–æ–ª–∞',
    '–±–µ–Ω–∑–∏–Ω', '–ø—Ä–µ—Å—Å–∞', '–æ–±–ª–∞–∫–æ', '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ', '–∫–ª—É–±–Ω–∏–∫–∞', '–º—ã—à–ª–µ–Ω–∏–µ', '—à—É–º',
    '–∫–≤–∞–¥—Ä–∞—Ç', '–∞–≤–æ–∫–∞–¥–æ', '–±–∞—Ä—å–µ—Ä', '–≤–∏—à–Ω—è', '–≥–ª–∞–¥–∫–∏–π', '–¥–æ—Å—É–∂–∏–π', '–µ–∫–≤–∞—Ç–æ—Ä',
    '–∂–∞—Ä', '–∑–∞–∫—É—Å–∫–∞', '–ª–∏–∫–µ—Ä', '–º–æ–π–∫–∞', '–Ω–∏–º—Ñ–µ—è', '–æ—Ç–ø—É—Å–∫', '–ø–µ—Ä–µ–º–µ–Ω–∞',
    '—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ', '—Å–∏–≥–Ω–∞–ª', '—Ç–∞–±—É—Ä–µ—Ç', '—Ç–∏–∫—Ç–æ–∫', '—É–∑–µ–ª', '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '—á–µ—Ä–µ—à–Ω—è',
    '—à–∞—Ç–µ—Ä', '—à—Ç–∞–Ω–≥–∞', '—è–≥–æ–¥–∞', '–∞–π—Å–±–µ—Ä–≥', '–±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å', '–ª–µ—Ö–∏—á', '–≥–æ–ª—å—Ñ',
    '–¥–µ—Ç—Å–∫–∏–π', '–µ–¥–∏–Ω–∏—Ü–∞', '–∂–≥—É—Ç', '–∑–∞–≤—Ç—Ä–∞–∫', '–∏—Å—Ç–∏–Ω–∞', '–∫–∞—Ä–∞–Ω–¥–∞—à', '–ª–∞–±–∏—Ä–∏–Ω—Ç',
    '–º–∞–≥–∞–∑–∏–Ω', '–Ω–µ–∫—Ä–æ–ª–æ–≥', '–æ–≥–æ–Ω—å', '–ø—É–ª—è', '—Ä–∏—Å—É–Ω–æ–∫', '—Å—É–¥—å–±–∞', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
    '—É–∫—Ä–æ–ø', '—Ñ–ª–æ—Ä–∞', '—Ö–∏–º–∏—è', '—Ü–æ–∫–æ–ª—å', '—á–∞–π–Ω–∏–∫', '—é–≤–µ–ª–∏—Ä', '—è–∫–æ—Ä—å', '–∫–æ—Å–º–æ—Å'
]


# –°–ª–æ–≤–∞—Ä–∏
current_game = {}
current_word = {}
user_status = {}


id_–ì—Ä—É–ø–ø–∞ = 0
id_–í–æ–≤–∞ = 0
id_–õ—ë—Ö–∞ = 0
id_–ù–µ–∫–∏—Ç = 0
id_–ê—Ä—Ç—ë–º = 0
id_–ì—Ä–∏–Ω—è = 0
id_–ê–Ω–¥—Ä–µ–π = 0


# =========================
# –ü–û–õ–£–ß–ï–ù–ò–ï –°–í–û–ï–ì–û ID –¢–ï–õ–ï–ì–†–ê–ú–ê
# =========================
@bot.message_handler(commands=['id'])
def id(message):
    id = message.from_user.id
    bot.send_message(message.chat.id, id)


# =========================
# –ü–û–õ–£–ß–ï–ù–ò–ï ID –ù–ê–®–ï–ô –ì–†–£–ü–ü–´ –¢–ï–õ–ï–ì–†–ê–ú–ê
# =========================
@bot.message_handler(commands=['group_id'])
def group_id(message):
    bot.reply_to(message, message.chat.id)


# =========================
# –í–´–ö–õ–Æ–ß–ï–ù–ò–ï –†–ê–ë–û–¢–´ –ë–û–¢–ê
# =========================
@bot.message_handler(commands=['stop_bot'])
def stop_bot(message):
    bot.send_message(message.chat.id, '–í–∞—à –±–æ—Çüí§...')
    bot.stop_polling()
    sys.exit(0)


# =========================
# –í–´–ó–û–í –ò–ì–†–´ –í –°–õ–û–í–ê
# =========================
@bot.message_handler(commands=['play_—Å–ª–æ–≤–∞'])
def play_game(message):
    user_status[message.chat.id] = 'playing'
    if message.chat.id not in current_game:
        word = random.choice(words)
        current_word[message.chat.id] = word.lower()
        current_game[message.chat.id] = {
            '–ø–æ–ø—ã—Ç–∫–∏': [],
            '–æ—Å—Ç–∞–≤—à–∏–µ—Å—è_–ø–æ–ø—ã—Ç–∫–∏': 10
        }
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£–≥–∞–¥–π—Ç–µ –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ. –£ –≤–∞—Å –µ—Å—Ç—å 10 –ø–æ–ø—ã—Ç–æ–∫.')
        bot.send_message(message.chat.id, '–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: ' + ''.join(['_ ' for _ in word]))
    else:
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /exit_—Å–ª–æ–≤–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞.')


# =========================
# –ü–ï–†–ï–ó–ê–ü–£–°–ö –ò–ì–†–´ –í –°–õ–û–í–ê
# =========================
@bot.message_handler(commands=['restart_—Å–ª–æ–≤–∞'])
def restart_game(message):
    if message.chat.id in user_status and user_status[message.chat.id] == 'playing':
        exit_game(message)
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∏–≥—Ä–µ')
        return

    user_status[message.chat.id] = 'playing'
    play_game(message)


# =========================
# –í–´–•–û–î –ò–ó –ò–ì–†–´ –í –°–õ–û–í–ê
# =========================
@bot.message_handler(commands=['exit_—Å–ª–æ–≤–∞'])
def exit_game(message):
    if message.chat.id in current_game:
        del current_game[message.chat.id]
        del current_word[message.chat.id]
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!')
    else:
        bot.send_message(message.chat.id, '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä–∞—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /play_—Å–ª–æ–≤–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.')


# –ò–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
games = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–Ω–∏—è –∫–æ–ª–æ–¥—ã –∫–∞—Ä—Ç
def create_deck():
    suits = ['‚ô†Ô∏è', '‚ô•Ô∏è', '‚ô¶Ô∏è', '‚ô£Ô∏è']
    values = [('2', 2), ('3', 3), ('4', 4), ('5', 5), ('6', 6),
              ('7', 7), ('8', 8), ('9', 9), ('10', 10),
              ('J', 10), ('Q', 10), ('K', 10), ('A', 11)]
    deck = [(value[0], suit) for value in values for suit in suits]
    random.shuffle(deck)  # shuffle - –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    return deck


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
def calculate_points(hand):
    points = sum(card[1] for card in hand)
    aces = sum(1 for card in hand if card[0] == 'A')
    while points > 21 and aces:
        points -= 10
        aces -= 1
    return points


# =========================
# –ò–ì–†–ê –í –û–ß–ö–û
# =========================
@bot.message_handler(commands=['play_–æ—á–∫–æ'])
def start_game(message):
    user_id = message.from_user.id
    if user_id in games:
        bot.reply_to(message, '–í—ã —É–∂–µ –∏–≥—Ä–∞–µ—Ç–µ –≤ –∏–≥—Ä—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /exit_–æ—á–∫–æ –¥–ª—è –≤—ã—Ö–æ–¥–∞.')
    else:
        games[user_id] = {
            'deck': create_deck(),
            'player_hand': [],
            'dealer_hand': [],
            'name': '–ò–≥—Ä–æ–∫'
        }
        for _ in range(2):
            games[user_id]['player_hand'].append(games[user_id]['deck'].pop())
            games[user_id]['dealer_hand'].append(games[user_id]['deck'].pop())
        bot.reply_to(message,
                     f'–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å, {games[user_id]['name']}! –í–∞—à–∏ –∫–∞—Ä—Ç—ã: {games[user_id]['player_hand']}. \n –î–∏–ª–µ—Ä: {games[user_id]['dealer_hand'][0]} –∏ —Å–∫—Ä—ã—Ç–∞—è –∫–∞—Ä—Ç–∞.')


# =========================
# –î–û–ë–ê–í–ò–¢–¨ –ö–ê–†–¢–£
# =========================
@bot.message_handler(commands=['hit_–æ—á–∫–æ'])
def player_hit(message):
    user_id = message.from_user.id
    if user_id in games:
        games[user_id]['player_hand'].append(games[user_id]['deck'].pop())
        player_points = calculate_points(games[user_id]['player_hand'])
        bot.reply_to(message,
                     f'–í—ã –≤–∑—è–ª–∏ –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É: {games[user_id]['player_hand']}. –£ –≤–∞—Å —Ç–µ–ø–µ—Ä—å {player_points} –æ—á–∫–æ–≤.')
        if player_points > 21:
            bot.reply_to(message, '–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ 21! –î–∏–ª–µ—Ä –≤—ã–∏–≥—Ä–∞–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /exit_–æ—á–∫–æ –¥–ª—è –≤—ã—Ö–æ–¥–∞.')
            del games[user_id]
    else:
        bot.reply_to(message, '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /play_–æ—á–∫–æ –¥–ª—è –Ω–∞—á–∞–ª–∞.')


# =========================
# –ü–†–û–ü–£–°–ö –•–û–î–ê
# =========================
@bot.message_handler(commands=['stand_–æ—á–∫–æ'])
def player_stand(message):
    user_id = message.from_user.id
    if user_id in games:
        dealer_points = calculate_points(games[user_id]['dealer_hand'])
        while dealer_points < 17:
            games[user_id]['dealer_hand'].append(games[user_id]['deck'].pop())
            dealer_points = calculate_points(games[user_id]['dealer_hand'])

        player_points = calculate_points(games[user_id]['player_hand'])
        bot.reply_to(message,
                     f'–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {games[user_id]['player_hand']} ({player_points} –æ—á–∫–æ–≤).\n–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞: {games[user_id]['dealer_hand']} ({dealer_points} –æ—á–∫–æ–≤).')

        if dealer_points > 21 or player_points > dealer_points:
            bot.reply_to(message, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, {games[user_id]['name']}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏!')
        elif player_points < dealer_points:
            bot.reply_to(message, '–î–∏–ª–µ—Ä –≤—ã–∏–≥—Ä–∞–ª, —É–≤—ã!')
        else:
            bot.reply_to(message, '–ù–∏—á—å—è!')

        del games[user_id]
    else:
        bot.reply_to(message, '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /play_–æ—á–∫–æ –¥–ª—è –Ω–∞—á–∞–ª–∞.')


# =========================
# –í–´–ô–¢–ò
# =========================
@bot.message_handler(commands=['exit_–æ—á–∫–æ'])
def exit_game(message):
    user_id = message.from_user.id
    if user_id in games:
        del games[user_id]
        bot.reply_to(message, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã, —Å –ø–æ–ª–Ω—ã–º –ø–æ–∑–æ—Ä–æ–º. –ù–∞–¥–µ—é—Å—å, –≤—ã –≤–µ—Ä–Ω–µ—Ç–µ—Å—å —Å–Ω–æ–≤–∞!')
    else:
        bot.reply_to(message, '–í—ã –Ω–µ –∏–≥—Ä–∞–µ—Ç–µ –≤ –∏–≥—Ä—É –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.')


# =========================
# –ü–û–ú–ï–ù–Ø–¢–¨ –ò–ú–Ø –ò–ì–†–û–ö–ê
# =========================
@bot.message_handler(commands=['set_name_–æ—á–∫–æ'])
def set_name(message):
    user_id = message.from_user.id
    name = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else ''
    if user_id in games:
        games[user_id]['name'] = name if name else '–ò–≥—Ä–æ–∫'
        bot.reply_to(message, f'–í–∞—à–µ –∏–º—è –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: {games[user_id]['name']}.')
    else:
        bot.reply_to(message, '–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /play_–æ—á–∫–æ.')


# =========================
# –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ü–û –ò–ì–†–ï –í –û–ß–ö–û
# =========================
@bot.message_handler(commands=['–æ—á–∫–æ'])
def default_response(message):
    bot.reply_to(message,
                 '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /play_–æ—á–∫–æ - –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã –≤ –æ—á–∫–æ, /hit_–æ—á–∫–æ - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É, /stand_–æ—á–∫–æ - –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞, /exit_–æ—á–∫–æ - –≤—ã–π—Ç–∏ —Å –ø–æ–∑–æ—Ä–æ–º, /set_name_–æ—á–∫–æ - —Å–º–µ–Ω–∏—Ç—å –∏–º—è.')


# =========================
# –ö–û–ú–ê–ù–î–ê –î–õ–Ø –í–´–í–û–î–ê –í–°–ï–• –ö–û–ú–ê–ù–î
# =========================
@bot.message_handler(commands=['help'])
def start(message):
    spis_command = ['/—è–∑—ã–∫_on\n/—è–∑—ã–∫_off',
                    '/id - —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –∞–π–¥–∏',
                    '/group_id - id –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã',
                    '/stop_bot - –≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞',
                    '/play_—Å–ª–æ–≤–∞ - –∏–≥—Ä–∞—Ç—å –≤ —Å–ª–æ–≤–∞\n/restart_—Å–ª–æ–≤–∞ - –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –≤ —Å–ª–æ–≤–∞\n/exit_—Å–ª–æ–≤–∞ - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã',
                    '/–æ—á–∫–æ - –æ—á–∫–æ\n/play_–æ—á–∫–æ - –∏–≥—Ä–∞\n/hit_–æ—á–∫–æ - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É\n/stand_–æ—á–∫–æ - –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞\n/exit_–æ—á–∫–æ - –≤—ã–π—Ç–∏ —Å –ø–æ–∑–æ—Ä–æ–º\n/set_name_–æ—á–∫–æ - —Å–º–µ–Ω–∞ –∏–º–µ–Ω–∏',
                    '/—à–∏—Ñ—Ä–∞—Ç–æ—Ä_on\n/—à–∏—Ñ—Ä–∞—Ç–æ—Ä_off\n/–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä_on\n/–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä_off',
                    '/–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ_on\n/–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ_off'
                    ]
    for command in range(len(spis_command)):
        bot.send_message(message.chat.id, spis_command[command])


is_—à–∏—Ñ—Ä–∞—Ç–æ—Ä = False  # –§–ª–∞–≥
is_–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä = False  # –§–ª–∞–≥


# =========================
# –í–ö–õ / –í–´–ö–õ - –†–ï–ñ–ò–ú –®–ò–§–†–ê–¢–û–†
# =========================
@bot.message_handler(commands=['—à–∏—Ñ—Ä–∞—Ç–æ—Ä_on'])
def —à–∏—Ñ—Ä–∞—Ç–æ—Ä_on(_):
    global is_—à–∏—Ñ—Ä–∞—Ç–æ—Ä
    is_—à–∏—Ñ—Ä–∞—Ç–æ—Ä = True


@bot.message_handler(commands=['—à–∏—Ñ—Ä–∞—Ç–æ—Ä_off'])
def —à–∏—Ñ—Ä–∞—Ç–æ—Ä_off(_):
    global is_—à–∏—Ñ—Ä–∞—Ç–æ—Ä
    is_—à–∏—Ñ—Ä–∞—Ç–æ—Ä = False


# =========================
# –í–ö–õ / –í–´–ö–õ - –†–ï–ñ–ò–ú –î–ï–®–ò–§–†–ê–¢–û–†
# =========================
@bot.message_handler(commands=['–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä_on'])
def –¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä_on(_):
    global is_–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä
    is_–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä = True


@bot.message_handler(commands=['–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä_off'])
def –¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä_off(_):
    global is_–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä
    is_–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä = False


# =========================
# –°–ü–ò–°–û–ö –û–¢–í–ï–¢–û–í –î–õ–Ø –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô
# =========================
answers = ['–ë–µ—Å—Å–ø–æ—Ä–Ω–æ', '–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ', '–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π', '–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞', '–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º',
           '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞', '–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ', '–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã', '–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞', '–¥–∞',
           '–ü–æ–∫–∞ –Ω–µ—è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞', '–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ', '–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å', '–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å',
           '–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å', '–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π', '–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç', '–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º - –Ω–µ—Ç',
           '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ']

# =========================
# –í–ö–õ / –í–´–ö–õ - –†–ï–ñ–ò–ú –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô
# =========================
user_states = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ = False  # –§–ª–∞–≥


@bot.message_handler(commands=['–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ_on'])
def –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ_on(message):
    global –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ = True
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç, —è –º–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä, –∏ —è –∑–Ω–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å.\n\n–ö–∞–∫ —Ç–µ–±—è –∑–≤–∞—Ç—å?')
    user_states[message.chat.id] = {'step': 'waiting_name'}


@bot.message_handler(commands=['–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ_off'])
def –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ_off(message):
    global –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ = False
    bot.send_message(message.chat.id,
                     '–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')


# =========================
# –í–ö–õ / –í–´–ö–õ - –†–ï–ñ–ò–ú –ü–û–î–ë–û–†–ê –Ø–ó–´–ö–ê –ü–†–û–ì–†–ê–ú–ú–ò–†–û–í–ê–ù–ò–Ø
# =========================
user_states2 = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
—è–∑—ã–∫ = False  # –§–ª–∞–≥


@bot.message_handler(commands=['—è–∑—ã–∫_off'])
def —è–∑—ã–∫_off(message):
    global —è–∑—ã–∫
    —è–∑—ã–∫ = False
    bot.send_message(message.chat.id, '–ü—Ä–æ–≥—Ä–∞–º–º–∞ "–ü–æ–¥–±–æ—Ä –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –Ø–∑—ã–∫–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è" –≤—ã–∫–ª—é—á–µ–Ω–∞')


@bot.message_handler(commands=['—è–∑—ã–∫_on'])
def —è–∑—ã–∫(message):
    global —è–∑—ã–∫
    —è–∑—ã–∫ = True
    chat_id = message.chat.id
    user_states2[chat_id] = {'step': 'start'}
    bot.send_message(message.chat.id,
                     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –∫–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ!\n\n–•–æ—Ç–∏—Ç–µ –º–Ω–æ–≥–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å? (–¥/–Ω)')


@bot.message_handler(func=lambda message: message.chat.id in current_game)
def guess_letter(message):
    word = current_word[message.chat.id]
    game_info = current_game[message.chat.id]

    guessed_letter = message.text.lower()

    if len(guessed_letter) == 1 and guessed_letter.isalpha():
        if guessed_letter in game_info['–ø–æ–ø—ã—Ç–∫–∏']:
            bot.send_message(message.chat.id, f'–í—ã —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏ –±—É–∫–≤—É {guessed_letter}!')
        else:
            game_info['–ø–æ–ø—ã—Ç–∫–∏'].append(guessed_letter)
            game_info['–æ—Å—Ç–∞–≤—à–∏–µ—Å—è_–ø–æ–ø—ã—Ç–∫–∏'] -= 1

            if guessed_letter in word:
                for i in range(len(word)):
                    if word[i] == guessed_letter:
                        bot.send_message(message.chat.id, f'–ë—É–∫–≤–∞ –Ω–∞—à–ª–∞—Å—å –Ω–∞ –º–µ—Å—Ç–µ: {i + 1}')

                current_state = ''.join([letter if letter in game_info['–ø–æ–ø—ã—Ç–∫–∏'] else '_' for letter in word])
                bot.send_message(message.chat.id, '–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ' + current_state)

                if '_' not in current_state:
                    bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ: {word}')
                    del current_game[message.chat.id]
                    del current_word[message.chat.id]
            else:
                bot.send_message(message.chat.id,
                                 f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –±—É–∫–≤–∞: {guessed_letter}. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {game_info['–æ—Å—Ç–∞–≤—à–∏–µ—Å—è_–ø–æ–ø—ã—Ç–∫–∏']}')

                if game_info['–æ—Å—Ç–∞–≤—à–∏–µ—Å—è_–ø–æ–ø—ã—Ç–∫–∏'] == 0:
                    bot.send_message(message.chat.id, f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: {word}')
                    del current_game[message.chat.id]
                    del current_word[message.chat.id]
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –±—É–∫–≤—É.')



@bot.message_handler(func=lambda message: is_—à–∏—Ñ—Ä–∞—Ç–æ—Ä)  # –®–∏—Ñ—Ä–∞—Ç–æ—Ä –º–æ–ª–æ–¥—ë–∂–Ω–æ–≥–æ —Å–ª–µ–Ω–≥–∞
def –º–æ–ª–æ–¥–µ–∂—å(message):
    a = message.text.split()
    s = [i for i in a]
    for i in s:
        b = i[1:] + i[0]
        b += '–∫–∏'
        bot.reply_to(message, b)


@bot.message_handler(func=lambda message: is_–¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä)  # –î–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä –º–æ–ª–æ–¥—ë–∂–Ω–æ–≥–æ —Å–ª–µ–Ω–≥–∞
def –º–æ–ª–æ–¥–µ–∂—å(message):
    a = message.text.split()
    s = [i for i in a]
    for i in s:
        b = i[1:] + i[0]
        b += '–∫–∏'
    s = [i[-3] + i[:-3] for i in a]
    bot.reply_to(message, *s)


@bot.message_handler(func=lambda message: –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ)
def handle_message(message):
    chat_id = message.chat.id
    user_state = user_states.get(chat_id)

    if user_state is None:
        user_states[chat_id] = {'step': 'waiting_name'}
        return

    if user_state['step'] == 'waiting_name':
        name = message.text
        bot.send_message(chat_id, f'–ü—Ä–∏–≤–µ—Ç, {name})')
        user_states[chat_id]['step'] = 'waiting_question'
        bot.send_message(chat_id, '–í–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å: ')
    elif user_state['step'] == 'waiting_question':
        question = message.text
        bot.send_message(chat_id, choice(answers))
        user_states[chat_id]['step'] = 'waiting_continue'
        bot.send_message(chat_id, '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥–∞/–Ω–µ—Ç)')
    elif user_state['step'] == 'waiting_continue':
        answer = message.text.lower()
        if answer == '–¥–∞'.lower():
            user_states[chat_id]['step'] = 'waiting_question'
            bot.send_message(chat_id, '–í–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å: ')
        else:
            bot.send_message(chat_id, '–ù—É –∏ –∏–¥–∏')
            del user_states[chat_id]  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è


@bot.message_handler(func=lambda message: —è–∑—ã–∫)
def –≤—ã–±–æ—Ä_—è–∑—ã–∫–∞(message):
    chat_id = message.chat.id
    user_state = user_states2.get(chat_id)

    if user_state is None:
        return

    step = user_state['step']
    text = message.text.lower()

    if step == 'start':
        if text == '–Ω':
            bot.send_message(chat_id, 'Delphi')
            del user_states2[chat_id]
        elif text == '–¥':
            user_states2[chat_id]['step'] = 'question_b'
            bot.send_message(chat_id, '–í—ã —Ç—É–ø–æ–π? (–¥/–Ω)')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')

    elif step == 'question_b':
        if text == '–Ω':
            user_states2[chat_id]['step'] = 'question_c'
            bot.send_message(chat_id, '–í—ã –∏–Ω–∂–µ–Ω–µ—Ä? (–¥/–Ω)')
        elif text == '–¥':
            user_states2[chat_id]['step'] = 'question_g'
            bot.send_message(chat_id, '–û—á–µ–Ω—å? (–¥/–Ω)')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
    elif step == 'question_c':
        if text == '–Ω':
            user_states2[chat_id]['step'] = 'question_d'
            bot.send_message(chat_id, '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–æ–≥–∏? (–¥/–Ω)')
        elif text == '–¥':
            user_states2[chat_id]['step'] = 'question_f'
            bot.send_message(chat_id, '–í–∞–º –±–æ–ª—å—à–µ 50? (–¥/–Ω)')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')

    elif step == 'question_d':
        if text == '–Ω':
            bot.send_message(chat_id, 'C')
            del user_states2[chat_id]
        elif text == '–¥':
            user_states2[chat_id]['step'] = 'question_e'
            bot.send_message(chat_id, '–ê –æ–Ω–∏ –≤–∞–º –Ω—É–∂–Ω—ã? (–¥/–Ω)')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
    elif step == 'question_e':
        if text == '–Ω':
            bot.send_message(chat_id, 'C++')
        elif text == '–¥':
            bot.send_message(chat_id, 'Java')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
        del user_states2[chat_id]

    elif step == 'question_f':
        if text == '–Ω':
            bot.send_message(chat_id, 'MatLab')
        elif text == '–¥':
            bot.send_message(chat_id, 'Fortran')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
        del user_states2[chat_id]

    elif step == 'question_g':
        if text == '–Ω':
            user_states2[chat_id]['step'] = 'question_h'
            bot.send_message(chat_id, '–í—ã –Ω–∞—Å–º–æ—Ç—Ä–µ–ª–∏—Å—å —É—Ä–æ–∫–æ–≤ –•–ê–£–î–ò –•–û? (–¥/–Ω)')
        elif text == '–¥':
            user_states2[chat_id]['step'] = 'question_l'
            bot.send_message(chat_id, '–£ –≤–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è? (–¥/–Ω)')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
    elif step == 'question_h':
        if text == '–Ω':
            user_states2[chat_id]['step'] = 'question_j'
            bot.send_message(chat_id, '–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è Windows? (–¥/–Ω)')
        elif text == '–¥':
            bot.send_message(chat_id, 'Python')
            del user_states2[chat_id]
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
    elif step == 'question_j':
        if text == '–Ω':
            user_states2[chat_id]['step'] = 'question_k'
            bot.send_message(chat_id, '–í—ã –ø–∏**—Ä? (–¥/–Ω)')
        elif text == '–¥':
            bot.send_message(chat_id, 'C#')
            del user_states2[chat_id]
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')

    elif step == 'question_k':
        if text == '–Ω':
            bot.send_message(chat_id, 'Perl')
        elif text == '–¥':
            bot.send_message(chat_id, 'Swift')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
        del user_states2[chat_id]
    elif step == 'question_l':
        if text == '–Ω':
            bot.send_message(chat_id, 'PHP')
            del user_states2[chat_id]
        elif text == '–¥':
            user_states2[chat_id]['step'] = 'question_m'
            bot.send_message(chat_id, '–û–Ω–∏ —Ç–æ–∂–µ —Ç—É–ø—ã–µ? (–¥/–Ω)')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
    elif step == 'question_m':
        if text == '–Ω':
            bot.send_message(chat_id, 'Rudy')
        elif text == '–¥':
            bot.send_message(chat_id, 'JavaScript')
        else:
            bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ (–¥/–Ω).')
        del user_states2[chat_id]



# ========================
# –ó–ê–ü–£–°–ö –ë–û–¢–ê
# ========================
if __name__ == '__main__':
    print('ü¶æ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç...')
    bot.polling(none_stop=True)






























